name: Workflow

on:
  workflow_dispatch:
  push:
    branches:
    - '**'

jobs:
  main:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: db_user
          POSTGRES_PASSWORD: db_pass
        options: >-
          --health-cmd "bash -c 'pg_isready -h localhost -U $POSTGRES_USER'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v4
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-ci-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-ci-${{ env.cache-name }}-
          ${{ runner.os }}-ci-
          ${{ runner.os }}-

    - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      working-directory: ./ui
      name: List the state of node modules
      continue-on-error: true
      run: npm list

    - name: Install dependencies
      working-directory: ./ui
      run: |
        npm install -g @angular/cli
        npm install

    - name: Update OpenAPI
      working-directory: ./tools
      run: |
        ./update-openapi.sh

    - name: Test api development
      working-directory: ./api
      run: ./mvnw -B test --file pom.xml

    - name: Test api production
      working-directory: ./api
      run: ./mvnw -B test --file pom.xml -Pprod
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/
        SPRING_DATASOURCE_USERNAME: db_user
        SPRING_DATASOURCE_PASSWORD: db_pass
        SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
        SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver

    - name: Build api
      working-directory: ./api
      run: ./mvnw -B package --file pom.xml -Pprod -DskipTests -DskipITs

    - name: Start api
      working-directory: ./api
      run: |
        nohup java -jar ./target/api-1.jar &
        until curl -fsS http://localhost:8080 | grep -q true; do sleep 1; done
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/
        SPRING_DATASOURCE_USERNAME: db_user
        SPRING_DATASOURCE_PASSWORD: db_pass
        SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
        SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver

    - name: Test ui
      working-directory: ./ui
      run: |
        ng e2e

    - name: Build ui
      working-directory: ./ui
      run: |
        ng build --configuration=production

    - uses: actions/upload-artifact@v4.6.2
      with:
        name: app
        path: |
          api/target/api-1.jar
          ui/dist/ui/browser
