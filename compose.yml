services:
  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB: fullstack
      POSTGRES_USER: db_user
      POSTGRES_PASSWORD: db_pass
    networks:
      - fullstack-net
    healthcheck:
      test: pg_isready -h localhost -U $$POSTGRES_USER
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: containerfile
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/fullstack
      SPRING_DATASOURCE_USERNAME: db_user
      SPRING_DATASOURCE_PASSWORD: db_pass
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
    networks:
      - fullstack-net
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 5

  ui:
    build:
      context: ./ui
      dockerfile: containerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - fullstack-net
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  fullstack-net:
    driver: bridge
